#!/bin/bash

function rosv()
{
  echo $ROS_DISTRO
}

# Show or change $ROS_MASTER_URI localhost port
function uri_local()
{
  if [[ $# < 1 ]]
  then
    echo $ROS_MASTER_URI
  else
    export ROS_MASTER_URI=http://localhost:$1
  fi
}

function uri()
{
    if [[ $# < 1 ]]
    then
      echo $ROS_MASTER_URI
    else
      export ROS_MASTER_URI=http://$1:11311
    fi
}

alias gn='rosnode list | grep'
alias gt='rostopic list | grep'
alias gs='rosservice list | grep'
alias gp='rosparam list | grep'

alias hz='rostopic hz'

alias catkinmake='catkin_make -j8'
alias catkinm='catkin_make -j8'

alias catkinbuild='catkin build'
alias catkinb='catkin build'
alias cb="catkin build"
alias cbt="cb --this"
alias cbtest="catkin test"

function rviz()
{
  if [[ $# < 1 ]]
  then
    rosrun rviz rviz
  else
    rosrun rviz rviz -d `rospack find ${1}_2dnav`/config/rviz/navigation.rviz
  fi
}

function ros_republish()
{
  if [[ $# < 2 ]]
  then
    echo "usage: ros_republish topic_in topic_out"
  else
    rosrun topic_tools relay ${1} ${2}
  fi
}

alias republish=ros_republish

alias tf_tree='rosrun rqt_tf_tree rqt_tf_tree'
alias rqt_reconfigure='rosrun rqt_reconfigure rqt_reconfigure'
alias rqt_reconf='rosrun rqt_reconfigure rqt_reconfigure'

function gazebo()
{
  if [[ $# < 1 ]]
  then
    echo "usage: gazebo <robot_name>"
  elif [[ $# < 3 ]]
  then
    roslaunch ${1}_2dnav_gazebo ${1}_navigation.launch
  fi
}

alias tf_tree='rosrun rqt_tf_tree rqt_tf_tree'
alias rqt_reconfigure='rosrun rqt_reconfigure rqt_reconfigure'
alias rqt_reconf='rosrun rqt_reconfigure rqt_reconfigure'

# DiZ helps with Qtcreator's permission bug
# that doesn't let you use the CMake symlink
# of the src folder.
function wsqt()
{
  cmakefile="src/CMakeLists.txt"
  cmake_top_level="/opt/ros/$ROS_DISTRO/share/catkin/cmake/toplevel.cmake"

  source devel/setup.bash

  if [ -e $cmakefile ]; then #File exist
    if [ -L $cmakefile ]; then #File is symlink
      my_link=$(readlink -f $cmakefile)
      unlink $cmakefile
      cp $my_link $cmakefile
    fi
  else #File doesn't exist
    cp $cmake_top_level $cmakefile
  fi
}

alias wsh="source devel/setup.bash"
